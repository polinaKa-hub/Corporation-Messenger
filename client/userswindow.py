from PyQt6.QtWidgets import (QDialog, QVBoxLayout, QListWidget, QPushButton, QListWidgetItem,
                            QMessageBox, QApplication)
from PyQt6.QtCore import Qt

class UsersWindow(QDialog):
    def __init__(self, comm, user_id):
        super().__init__()
        self.comm = comm
        self.user_id = user_id
        self.init_ui()
        
    def init_ui(self):
        self.setWindowTitle("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        self.setFixedSize(400, 500)
        
        layout = QVBoxLayout()
        
        self.users_list = QListWidget()
        self.refresh_button = QPushButton("–û–±–Ω–æ–≤–∏—Ç—å")
        self.refresh_button.clicked.connect(self.load_users)
        
        self.new_chat_button = QPushButton("–°–æ–∑–¥–∞—Ç—å —á–∞—Ç")
        self.new_chat_button.clicked.connect(self.create_chat_with_selected)
        
        layout.addWidget(self.users_list)
        layout.addWidget(self.refresh_button)
        layout.addWidget(self.new_chat_button)
        
        self.setLayout(layout)
        self.load_users()
        
    def load_users(self):
        try:
            # –Ø–≤–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤
            response = self.comm.send_message({
                'type': 'get_users',
                'force_update': True  # –§–ª–∞–≥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            })
            
            if not response:
                raise ValueError("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
                
            if response.get('status') != 'success':
                raise ValueError(response.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'))
                
            self.users_list.clear()
            
            # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: –æ–Ω–ª–∞–π–Ω -> –ø–æ –∏–º–µ–Ω–∏
            online_users = []
            offline_users = []
            
            for user in response['users']:
                if user['id'] == self.user_id:
                    continue
                    
                item_data = {
                    'id': user['id'],
                    'text': f"{'üü¢' if user['online'] else 'üî¥'} {user.get('name', user['username'])} ({user['username']})",
                    'online': user['online']
                }
                
                if user['online']:
                    online_users.append(item_data)
                else:
                    offline_users.append(item_data)
            
            # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
            online_users.sort(key=lambda x: x['text'])
            offline_users.sort(key=lambda x: x['text'])
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
            for user in online_users + offline_users:
                item = QListWidgetItem(user['text'])
                item.setData(Qt.ItemDataRole.UserRole, user['id'])
                self.users_list.addItem(item)
                
        except Exception as e:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {str(e)}")
            print(f"Error loading users: {e}")
                
    def create_chat_with_selected(self):
        selected = self.users_list.currentItem()
        if not selected:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            return
        
        try:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            QApplication.setOverrideCursor(Qt.CursorShape.WaitCursor)
            
            # –ü–æ–ª—É—á–∞–µ–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_id = selected.data(Qt.ItemDataRole.UserRole)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å —Ç–∞–π–º–∞—É—Ç–æ–º
            response = self.comm.send_message({
                'type': 'create_chat',
                'user_id': self.user_id,
                'participant_ids': [self.user_id, user_id],
                'is_group': False
            })
            
            if not response:
                raise ValueError("–ù–µ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
            
            if response.get('status') == 'success':
                if response.get('existing'):
                    QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ß–∞—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ß–∞—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
                self.accept()
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
                if hasattr(self.parent(), 'load_chats'):
                    self.parent().load_chats()
            else:
                error_msg = response.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞: {error_msg}")
                
        except Exception as e:
            QMessageBox.critical(
                self,
                "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
                f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —á–∞—Ç: {str(e)}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )
        finally:
            QApplication.restoreOverrideCursor()
