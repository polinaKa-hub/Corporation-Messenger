from PyQt6.QtWidgets import (QDialog, QVBoxLayout, QListWidget, QPushButton, QListWidgetItem,
                            QLineEdit, QLabel, QHBoxLayout, QMessageBox, QApplication)
from PyQt6.QtCore import Qt

class NewChatDialog(QDialog):
    def __init__(self, comm, user_id):
        super().__init__()
        self.comm = comm
        self.user_id = user_id
        self.selected_users = []
        self.init_ui()
        
    def init_ui(self):
        self.setWindowTitle("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç")
        self.setFixedSize(500, 600)
        
        layout = QVBoxLayout()
        
        # –ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞
        self.chat_name_label = QLabel("–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤):")
        self.chat_name_input = QLineEdit()
        self.chat_name_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞")
        
        # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.users_label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:")
        self.users_list = QListWidget()
        self.users_list.setSelectionMode(QListWidget.SelectionMode.MultiSelection)
        
        # –ö–Ω–æ–ø–∫–∏
        self.create_button = QPushButton("–°–æ–∑–¥–∞—Ç—å —á–∞—Ç")
        self.create_button.clicked.connect(self.create_chat)
        self.cancel_button = QPushButton("–û—Ç–º–µ–Ω–∞")
        self.cancel_button.clicked.connect(self.reject)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ layout
        layout.addWidget(self.chat_name_label)
        layout.addWidget(self.chat_name_input)
        layout.addWidget(self.users_label)
        layout.addWidget(self.users_list)
        
        # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π layout –¥–ª—è –∫–Ω–æ–ø–æ–∫
        buttons_layout = QHBoxLayout()
        buttons_layout.addWidget(self.create_button)
        buttons_layout.addWidget(self.cancel_button)
        layout.addLayout(buttons_layout)
        
        self.setLayout(layout)
        self.load_users()
        
    def load_users(self):
        response = self.comm.send_message({
            'type': 'get_users',
            'force_update': True
        })
        
        if response.get('status') == 'success':
            self.users_list.clear()
            
            # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: –æ–Ω–ª–∞–π–Ω -> –ø–æ –∏–º–µ–Ω–∏
            online_users = []
            offline_users = []
            
            for user in response['users']:
                if user['id'] == self.user_id:
                    continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    
                item_data = {
                    'id': user['id'],
                    'text': f"{'üü¢' if user['online'] else 'üî¥'} {user.get('name', user['username'])} ({user['username']})",
                    'online': user['online']
                }
                
                if user['online']:
                    online_users.append(item_data)
                else:
                    offline_users.append(item_data)
            
            # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
            online_users.sort(key=lambda x: x['text'])
            offline_users.sort(key=lambda x: x['text'])
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
            for user in online_users + offline_users:
                item = QListWidgetItem(user['text'])
                item.setData(Qt.ItemDataRole.UserRole, user['id'])
                self.users_list.addItem(item)
                
    def create_chat(self):
        selected_items = self.users_list.selectedItems()
        if not selected_items:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞")
            return
            
        chat_name = self.chat_name_input.text().strip()
        participant_ids = [self.user_id]  # –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ–≥–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫
        
        for item in selected_items:
            participant_ids.append(item.data(Qt.ItemDataRole.UserRole))
            
        # –î–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
        if len(participant_ids) > 2 and not chat_name:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–î–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ")
            return
            
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        QApplication.setOverrideCursor(Qt.CursorShape.WaitCursor)
        
        try:
            response = self.comm.send_message({
                'type': 'create_chat',
                'user_id': self.user_id,
                'participant_ids': participant_ids,
                'is_group': len(participant_ids) > 2,
                'name': chat_name if chat_name else None
            })
            
            if response.get('status') == 'success':
                QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ß–∞—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
                self.accept()
            else:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", response.get('message', '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —á–∞—Ç'))
                
        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}")
        finally:
            QApplication.restoreOverrideCursor()
